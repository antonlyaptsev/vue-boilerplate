version: '2'
services:
  postgres:
    image: postgres:${PG_VERSION}
    env_file: .env
    volumes:
      - .:/src
      - ./data_postgres:/var/lib/postgresql/data
  redis:
    image: redis
    env_file: .env
    volumes:
      - ./data_redis:/data
  nginx:
    image: nginx:stable
    ports:
      - "0.0.0.0:${PORT}:80"
      - "0.0.0.0:${ADMIN_PORT}:8520"
    links:
      - frontend
      - admin
      - api
    volumes:
      - .:/src
      - ./configs/nginx.${ENVIRONMENT}.conf:/etc/nginx/nginx.conf
      - ./configs/proxy_params:/etc/nginx/proxy_params
  frontend:
    image: node:${NODE_VERSION}
    volumes:
      - ./frontend:/src:rw
      - ./configs:/configs:ro
    links:
      - api
    working_dir: /src
    env_file: .env
    command: bash -c "if [[ $ENVIRONMENT == 'prod' ]]; then npm run build; else npm run dev; fi"
  admin:
    image: node:${NODE_VERSION}
    volumes:
      - ./admin:/src:rw
      - ./configs:/configs:ro
    links:
      - postgres
      - redis
    working_dir: /src
    env_file: .env
    command: bash -c "if [[ $ENVIRONMENT == 'prod' ]]; then npm run build; else npm run dev; fi"
  api:
    image: node:${NODE_VERSION}
    volumes:
      - ./api:/src:rw
      - ./configs:/configs:ro
    working_dir: /src
    env_file: .env
    command: npm run dev
  